// <auto-generated />
using System;
using DataAccessLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240710120140_addProductImages")]
    partial class addProductImages
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntityLayer.Concrete.About", b =>
                {
                    b.Property<int>("AboutID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AboutID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AboutID");

                    b.ToTable("Abouts");
                });

            modelBuilder.Entity("EntityLayer.Concrete.AboutTranslation", b =>
                {
                    b.Property<int>("AboutTranslationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AboutTranslationID"));

                    b.Property<int>("AboutID")
                        .HasColumnType("int");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AboutTranslationID");

                    b.HasIndex("AboutID");

                    b.ToTable("AboutTranslations");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Arge", b =>
                {
                    b.Property<int>("ArgeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArgeID"));

                    b.Property<string>("Description1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArgeID");

                    b.ToTable("Arges");
                });

            modelBuilder.Entity("EntityLayer.Concrete.ArgeTranslation", b =>
                {
                    b.Property<int>("ArgeTranslationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArgeTranslationID"));

                    b.Property<int>("ArgeID")
                        .HasColumnType("int");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedDescription1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedDescription2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedDescription3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedDescription4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedName2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArgeTranslationID");

                    b.HasIndex("ArgeID");

                    b.ToTable("ArgeTranslations");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Brand", b =>
                {
                    b.Property<int>("BrandID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandID");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("EntityLayer.Concrete.BrandTranslation", b =>
                {
                    b.Property<int>("BrandTranslationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandTranslationID"));

                    b.Property<int>("BrandID")
                        .HasColumnType("int");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandTranslationID");

                    b.HasIndex("BrandID");

                    b.ToTable("BrandTranslations");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("EntityLayer.Concrete.CategoryTranslation", b =>
                {
                    b.Property<int>("CategoryTranslationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryTranslationId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryTranslationId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryTranslations");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Contact", b =>
                {
                    b.Property<int>("ContactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Maps")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactID");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("EntityLayer.Concrete.ContactTranslation", b =>
                {
                    b.Property<int>("ContactTranslationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactTranslationID"));

                    b.Property<int>("ContactID")
                        .HasColumnType("int");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedMaps")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactTranslationID");

                    b.HasIndex("ContactID");

                    b.ToTable("ContactTranslations");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Feature", b =>
                {
                    b.Property<int>("FeatureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeatureID"));

                    b.Property<string>("Desciption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FeatureID");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("EntityLayer.Concrete.FeatureTranslation", b =>
                {
                    b.Property<int>("FeatureTranslationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeatureTranslationID"));

                    b.Property<int>("FeatureID")
                        .HasColumnType("int");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedDesciption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedVideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FeatureTranslationID");

                    b.HasIndex("FeatureID");

                    b.ToTable("FeatureTranslations");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Header", b =>
                {
                    b.Property<int>("HeaderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HeaderID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HeaderID");

                    b.ToTable("Headers");
                });

            modelBuilder.Entity("EntityLayer.Concrete.HeaderTranslation", b =>
                {
                    b.Property<int>("HeaderTranslationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HeaderTranslationID"));

                    b.Property<int>("HeaderID")
                        .HasColumnType("int");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedP1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedP2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedP3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedP4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HeaderTranslationID");

                    b.HasIndex("HeaderID");

                    b.ToTable("HeaderTranslations");
                });

            modelBuilder.Entity("EntityLayer.Concrete.MasterBrand", b =>
                {
                    b.Property<int>("MasterBrandID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MasterBrandID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterBrandID");

                    b.ToTable("MasterBrands");
                });

            modelBuilder.Entity("EntityLayer.Concrete.MasterBrandTranslation", b =>
                {
                    b.Property<int>("MasterBrandTranslationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MasterBrandTranslationID"));

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MasterBrandID")
                        .HasColumnType("int");

                    b.Property<string>("TranslatedDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterBrandTranslationID");

                    b.HasIndex("MasterBrandID");

                    b.ToTable("MasterBrandTranslations");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Message", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageID"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("_Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MessageID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Partner", b =>
                {
                    b.Property<int>("PartnerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartnerID"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PartnerID");

                    b.ToTable("Partners");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Portfolio", b =>
                {
                    b.Property<int>("PortfolioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PortfolioID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SP1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SP2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PortfolioID");

                    b.ToTable("Portfolios");
                });

            modelBuilder.Entity("EntityLayer.Concrete.PortfolioTranslation", b =>
                {
                    b.Property<int>("PortfolioTranslationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PortfolioTranslationID"));

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PortfolioID")
                        .HasColumnType("int");

                    b.Property<string>("TranslatedDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedP1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedP2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedP3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedS1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedS2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedSP1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedSP2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PortfolioTranslationID");

                    b.HasIndex("PortfolioID");

                    b.ToTable("PortfolioTranslation");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Desciption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desciption2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desciption3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desciption4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHome")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PImageUrl2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PImageUrl3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PdfFileImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PdfFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PdfFileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("EntityLayer.Concrete.ProductCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<int>("CategoryId1")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.HasIndex("CategoryId1");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("EntityLayer.Concrete.ProductTranslation", b =>
                {
                    b.Property<int>("ProductTranslationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductTranslationID"));

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<string>("TranslatedDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedDescription2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedDescription3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedDescription4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TranslatedIsApproved")
                        .HasColumnType("bit");

                    b.Property<bool?>("TranslatedIsHome")
                        .HasColumnType("bit");

                    b.Property<string>("TranslatedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedPImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedPdfFileImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedPdfFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedPdfFileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductTranslationID");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductTranslations");
                });

            modelBuilder.Entity("EntityLayer.Concrete.QuestionTranslation", b =>
                {
                    b.Property<int>("QuestionTranslationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionTranslationID"));

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionID")
                        .HasColumnType("int");

                    b.Property<string>("TranslatedDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionTranslationID");

                    b.HasIndex("QuestionID");

                    b.ToTable("QuestionTranslations");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Questions", b =>
                {
                    b.Property<int>("QuestionsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionsID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionsID");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Reference", b =>
                {
                    b.Property<int>("ReferenceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReferenceID"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReferenceID");

                    b.ToTable("References");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Skill", b =>
                {
                    b.Property<int>("SkillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SkillID");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SkillTranslation", b =>
                {
                    b.Property<int>("SkillTranslationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillTranslationID"));

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SkillID")
                        .HasColumnType("int");

                    b.Property<string>("TranslatedDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SkillTranslationID");

                    b.HasIndex("SkillID");

                    b.ToTable("SkillTranslations");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SocialMedia", b =>
                {
                    b.Property<int>("SocialMediaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SocialMediaID"));

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SocialMediaID");

                    b.ToTable("SocialMedias");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Topbar", b =>
                {
                    b.Property<int>("TopbarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TopbarID"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TopbarID");

                    b.ToTable("Topbars");
                });

            modelBuilder.Entity("EntityLayer.Concrete.AboutTranslation", b =>
                {
                    b.HasOne("EntityLayer.Concrete.About", "About")
                        .WithMany("AboutTranslations")
                        .HasForeignKey("AboutID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("About");
                });

            modelBuilder.Entity("EntityLayer.Concrete.ArgeTranslation", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Arge", "Arge")
                        .WithMany("ArgeTranslations")
                        .HasForeignKey("ArgeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arge");
                });

            modelBuilder.Entity("EntityLayer.Concrete.BrandTranslation", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Brand", "Brand")
                        .WithMany("BrandTranslations")
                        .HasForeignKey("BrandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("EntityLayer.Concrete.CategoryTranslation", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Category", "Category")
                        .WithMany("CategoryTranslations")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EntityLayer.Concrete.ContactTranslation", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Contact", "Contact")
                        .WithMany("ContactTranslations")
                        .HasForeignKey("ContactID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("EntityLayer.Concrete.FeatureTranslation", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Feature", "Feature")
                        .WithMany("FeatureTranslations")
                        .HasForeignKey("FeatureID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("EntityLayer.Concrete.HeaderTranslation", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Header", "Header")
                        .WithMany("HeaderTranslations")
                        .HasForeignKey("HeaderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Header");
                });

            modelBuilder.Entity("EntityLayer.Concrete.MasterBrandTranslation", b =>
                {
                    b.HasOne("EntityLayer.Concrete.MasterBrand", "MasterBrand")
                        .WithMany("MasterBrandTranslations")
                        .HasForeignKey("MasterBrandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MasterBrand");
                });

            modelBuilder.Entity("EntityLayer.Concrete.PortfolioTranslation", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Portfolio", "Portfolio")
                        .WithMany("PortfolioTranslations")
                        .HasForeignKey("PortfolioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("EntityLayer.Concrete.ProductCategory", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EntityLayer.Concrete.ProductTranslation", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Product", "Product")
                        .WithMany("Translations")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EntityLayer.Concrete.QuestionTranslation", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Questions", "Question")
                        .WithMany("Translations")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SkillTranslation", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Skill", "Skill")
                        .WithMany("Translations")
                        .HasForeignKey("SkillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("EntityLayer.Concrete.About", b =>
                {
                    b.Navigation("AboutTranslations");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Arge", b =>
                {
                    b.Navigation("ArgeTranslations");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Brand", b =>
                {
                    b.Navigation("BrandTranslations");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Category", b =>
                {
                    b.Navigation("CategoryTranslations");

                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Contact", b =>
                {
                    b.Navigation("ContactTranslations");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Feature", b =>
                {
                    b.Navigation("FeatureTranslations");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Header", b =>
                {
                    b.Navigation("HeaderTranslations");
                });

            modelBuilder.Entity("EntityLayer.Concrete.MasterBrand", b =>
                {
                    b.Navigation("MasterBrandTranslations");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Portfolio", b =>
                {
                    b.Navigation("PortfolioTranslations");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Product", b =>
                {
                    b.Navigation("ProductCategories");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Questions", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Skill", b =>
                {
                    b.Navigation("Translations");
                });
#pragma warning restore 612, 618
        }
    }
}
